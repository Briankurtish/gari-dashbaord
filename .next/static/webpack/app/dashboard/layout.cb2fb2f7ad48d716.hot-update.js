"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/layout",{

/***/ "(app-pages-browser)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: function() { return /* binding */ authService; }\n/* harmony export */ });\nconst API_URL = \"https://api.gari-mobility.tech\";\nclass AuthService {\n    async login(credentials) {\n        try {\n            console.log(\"Starting login process with:\", credentials.email);\n            const response = await fetch(\"\".concat(API_URL, \"/api/v1/auth/login/\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: credentials.email,\n                    password: credentials.password\n                })\n            });\n            console.log(\"Login response status:\", response.status);\n            const responseText = await response.text();\n            console.log(\"Raw response:\", responseText);\n            let data;\n            try {\n                data = JSON.parse(responseText);\n            } catch (e) {\n                console.error(\"Failed to parse response:\", e);\n                throw new Error(\"Invalid response from server\");\n            }\n            if (!response.ok) {\n                console.error(\"Login failed:\", data);\n                throw new Error(data.detail || data.error || \"Failed to login\");\n            }\n            // Handle both uppercase and lowercase token field\n            const token = data.Token || data.token;\n            if (!token) {\n                console.error(\"No token in response:\", data);\n                throw new Error(\"No token received from server\");\n            }\n            // Store the token\n            console.log(\"Storing authentication token\");\n            localStorage.setItem(\"token\", token);\n            // Store user data if available\n            if (data.user) {\n                localStorage.setItem(\"user\", JSON.stringify(data.user));\n            }\n            return {\n                token: token,\n                user: data.user\n            };\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            if (error instanceof TypeError && error.message === \"Failed to fetch\") {\n                throw new Error(\"Network error - Unable to connect to the server. Please check your internet connection.\");\n            }\n            throw error;\n        }\n    }\n    logout() {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n    }\n    getCurrentUser() {\n        const userStr = localStorage.getItem(\"user\");\n        if (userStr) {\n            try {\n                return JSON.parse(userStr);\n            } catch (e) {\n                this.logout();\n            }\n        }\n        return null;\n    }\n    getAuthHeader() {\n        const token = this.getToken();\n        return token ? {\n            Authorization: \"Token \".concat(token)\n        } : {};\n    }\n    getToken() {\n        return localStorage.getItem(\"token\");\n    }\n    isAuthenticated() {\n        return !!this.getToken();\n    }\n    async makeAuthenticatedRequest(url) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            const token = this.getToken();\n            console.log(\"Making authenticated request to:\", url);\n            const headers = {\n                \"Content-Type\": \"application/json\",\n                ...options.headers\n            };\n            if (token) {\n                headers[\"Authorization\"] = token;\n            }\n            const response = await fetch(url, {\n                ...options,\n                headers\n            });\n            if (response.status === 401) {\n                console.log(\"Authentication failed, logging out\");\n                this.logout();\n                window.location.href = \"/login\";\n                throw new Error(\"Authentication expired\");\n            }\n            return response;\n        } catch (error) {\n            console.error(\"Request error:\", error);\n            if (error instanceof TypeError && error.message === \"Failed to fetch\") {\n                throw new Error(\"Network error - Unable to connect to the server. Please check your internet connection.\");\n            }\n            throw error;\n        }\n    }\n}\nconst authService = new AuthService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.ts\n"));

/***/ })

});